<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css'/>
  <script type="text/javascript" src="/javascripts/he.js"></script>
  <script type="text/javascript" src="/javascripts/htmlparser.js"></script>
  <script>

    //解码 校验 
    var parse = function (str) {
      var results = '';

      try {
        //HTMLParse整个domParse的结构，HTMLParser()在htmlparser.js中定义，         
        //unescape()对输入进行解码反转义,参数strict:true表示严格模式,he对象来自he.js(编解码的库) 
        //HTMLParser()进行校验配对 
        HTMLParser(he.unescape(str, {strict: true}), {
          /* 例子:'<h1>jskjfa</h1>'*/  // 解析到<h1>触发 
          start: function (tag, attrs, unary) {
            //标签、属性、是否单标签,如img  
            //过滤掉不安全的标签 
            if (tag == 'script' || tag == 'style' || tag == 'link' || tag == 'iframe' || tag == 'frame') return;
            results += '<' + tag;
            // 过滤掉标签属性  
            // for(var i=0,len=attrs.length;i<len;i++){  
            // results+=" "+attrs[i].name+'="'+attrs[i].escaped+'"';  
            // } 
            results += (unary ? '/' : '') + '>';
          },
          //解析到</h1>触发 
          end: function (tag) {
            results += '</' + tag + '>';
          },
          //解析到jskjfa 触发 
          chars: function (text) {
            results += text;
          },
          //解析到注释时触发 
          comment: function (text) {
            results += '<!--' + text + '-->';
          },
        });
        return results;
      } catch (e) {
        console.log(e);
      }
      finally {
      }
    };
  </script>
</head>

<body>
<h1>
  <%= title %>
</h1>
<p>Welcome to
  <%= title %>
</p>
<br>
<br>
<hr>

<textarea name="name" id="txt" cols="80" rows="8">
  sks <img src='null' alt='' onerror='alert(1)'/>
</textarea>
<button type="button" name="button" id="btn">评论</button>
<button type="button" name="button" id="get">获取评论</button>

<script>
  var btn = document.getElementById('btn');
  var get = document.getElementById('get');
  var txt = document.getElementById('txt');
  //IE下不支持这个方法
  btn.addEventListener('click', function () {
    //获取XMLhttp
    var xhr = new XMLHttpRequest();
    //服务端接收内容的接口
    var url = '/pushComment?comment=' + txt.value;
    //打开对象
    xhr.open('GET', url, true);
    //监听xhr对象和服务端通信之后的连接状态
    xhr.onreadystatechange = function () {
      //通过监听对象的状态，来获取客户端和服务端的通信的过程和进度
      console.log(xhr); //连接通信成功
      if (xhr.readyState == 4) {
        //客户端和服务端这次通信完成成功
        if (xhr.status == 200) {
          console.log(xhr);
        } else {
          console.log('error');
        }
      }
    };
    //发起客户端和服务端的连接
    xhr.send();
  });
  get.addEventListener('click', function () {
    var xhr = new XMLHttpRequest();
    var url = '/getComment';
    xhr.open('GET', url, true);
    xhr.onreadystatechange = function () {
      if (xhr.readyState == 4) {
        if (xhr.status == 200) {
          /* (防止XSS攻击的步骤) */ //对数据进行解码 //配对校验
          var com = xhr.response || parse(JSON.parse(xhr.response).comment);
          var txt = document.createElement('span');
          //com经过DOMParse转义后的，com这个文本是包含html标签的文本
          txt.innerHTML = com;
          document.body.appendChild(txt);
        } else {
          console.log('error');
        }
      }
    };
    xhr.send();
  });
</script>

</body>

</html>